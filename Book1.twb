<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Global covid data' inline='true' name='federated.1rgyw9n0safkil19yuy4m1si954l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global covid data' name='textscan.0qvu8va18t5gbm13wkg3g0fdyufk'>
            <connection class='textscan' directory='F:/Analyticas Project/CORONAVIRUS PROJECT' filename='Global covid data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0qvu8va18t5gbm13wkg3g0fdyufk' name='Global covid data.csv' table='[Global covid data#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country Region' ordinal='0' />
            <column datatype='string' name='iso3' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Cases.New' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='integer' name='Cases.Critical' ordinal='5' />
            <column datatype='integer' name='Recovered' ordinal='6' />
            <column datatype='integer' name='Confirmed' ordinal='7' />
            <column datatype='integer' name='Cases.Total' ordinal='8' />
            <column datatype='integer' name='Deaths.New' ordinal='9' />
            <column datatype='integer' name='Deaths.1M_pop' ordinal='10' />
            <column datatype='integer' name='Deaths' ordinal='11' />
            <column datatype='integer' name='Tests.1M_pop' ordinal='12' />
            <column datatype='integer' name='Tests.Total' ordinal='13' />
            <column datatype='date' name='Last Update' ordinal='14' />
            <column datatype='string' name='Time' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0qvu8va18t5gbm13wkg3g0fdyufk' name='Global covid data.csv' table='[Global covid data#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country Region' ordinal='0' />
            <column datatype='string' name='iso3' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Cases.New' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='integer' name='Cases.Critical' ordinal='5' />
            <column datatype='integer' name='Recovered' ordinal='6' />
            <column datatype='integer' name='Confirmed' ordinal='7' />
            <column datatype='integer' name='Cases.Total' ordinal='8' />
            <column datatype='integer' name='Deaths.New' ordinal='9' />
            <column datatype='integer' name='Deaths.1M_pop' ordinal='10' />
            <column datatype='integer' name='Deaths' ordinal='11' />
            <column datatype='integer' name='Tests.1M_pop' ordinal='12' />
            <column datatype='integer' name='Tests.Total' ordinal='13' />
            <column datatype='date' name='Last Update' ordinal='14' />
            <column datatype='string' name='Time' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Region]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Country Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases.New</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases.New]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Cases.New</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases.Critical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases.Critical]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Cases.Critical</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases.Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases.Total]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Cases.Total</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths.New</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths.New]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Deaths.New</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths.1M_pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths.1M_pop]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Deaths.1M_pop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests.1M_pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests.1M_pop]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Tests.1M_pop</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests.Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tests.Total]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Tests.Total</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Global covid data.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths.1M pop' datatype='integer' name='[Deaths.1M_pop]' role='measure' type='quantitative' />
      <column caption='Tests.1M pop' datatype='integer' name='[Tests.1M_pop]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Global covid data.csv' datatype='table' name='[__tableau_internal_object_id__].[Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889]' role='measure' type='quantitative' />
      <column caption='Iso3' datatype='string' name='[iso3]' role='dimension' type='nominal' />
      <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guam (US)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Martin (France)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands (BOT)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sint Eustatius (Netherlands)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa (US)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda (BOT)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isle of Man (Crown Dependency)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint BarthÃ©lemy (France)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Transnistria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba (Netherlands)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands (Denmark)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Pierre and Miquelon (France)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turks and Caicos Islands (BOT)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Island (Australia)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenland (Denmark)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat (BOT)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena, Ascension and Tristan da Cunha (BOT)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mayotte (France)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ã…land (Finland)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sint Maarten (Netherlands)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Guiana (France)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cocos (Keeling) Islands (Australia)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia (France)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Svalbard and Jan Mayen (Norway)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CuraÃ§ao (Netherlands)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pitcairn Islands (BOT)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Polynesia (France)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Puerto Rico (US)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norfolk Island (Australia)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RÃ©union (France)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guernsey (Crown Dependency)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jersey (Crown Dependency)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla (BOT)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire (Netherlands)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadeloupe (France)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tokelau (NZ)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Martinique (France)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Artsakh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands (BOT)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (BOT)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;U.S. Virgin Islands (US)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gibraltar (BOT)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands (US)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saba (Netherlands)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Global covid data.csv' id='Global covid data.csv_8F39B0CFF5AE4702A827D059E0672889'>
            <properties context=''>
              <relation connection='textscan.0qvu8va18t5gbm13wkg3g0fdyufk' name='Global covid data.csv' table='[Global covid data#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country Region' ordinal='0' />
                  <column datatype='string' name='iso3' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='integer' name='Cases.New' ordinal='3' />
                  <column datatype='integer' name='Active' ordinal='4' />
                  <column datatype='integer' name='Cases.Critical' ordinal='5' />
                  <column datatype='integer' name='Recovered' ordinal='6' />
                  <column datatype='integer' name='Confirmed' ordinal='7' />
                  <column datatype='integer' name='Cases.Total' ordinal='8' />
                  <column datatype='integer' name='Deaths.New' ordinal='9' />
                  <column datatype='integer' name='Deaths.1M_pop' ordinal='10' />
                  <column datatype='integer' name='Deaths' ordinal='11' />
                  <column datatype='integer' name='Tests.1M_pop' ordinal='12' />
                  <column datatype='integer' name='Tests.Total' ordinal='13' />
                  <column datatype='date' name='Last Update' ordinal='14' />
                  <column datatype='string' name='Time' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed vs Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' />
              <size column='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]</rows>
        <cols>[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{B40006F3-B4D4-4EA5-97FA-2762CC7F903A}' />
    </worksheet>
    <worksheet name='Dual Axis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Recovered:qk] + [federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk])</rows>
        <cols>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</cols>
      </table>
      <simple-id uuid='{66CB547E-E311-47B6-A77E-15FEA9EB07CD}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' />
              <lod column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' />
              <lod column='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgyw9n0safkil19yuy4m1si954l].[Latitude (generated)]</rows>
        <cols>[federated.1rgyw9n0safkil19yuy4m1si954l].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{70A0C954-4ABF-48C0-A032-C2674D8CDD5A}' />
    </worksheet>
    <worksheet name='Mortality rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Tests.1M pop' datatype='integer' name='[Tests.1M_pop]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tests.1M_pop]' derivation='Sum' name='[sum:Tests.1M_pop:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Tests.1M_pop:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</rows>
        <cols>[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Tests.1M_pop:qk]</cols>
      </table>
      <simple-id uuid='{5838602C-24E7-4044-9B21-B0C2BF126ED3}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Confirmed Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Ã…land (Finland)&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Falkland Islands (BOT)&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Saint BarthÃ©lemy (France)&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Turkmenistan&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]</rows>
        <cols>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</cols>
      </table>
      <simple-id uuid='{9B4F4D25-2ECC-4677-87A4-5DEEBEFD31F3}' />
    </worksheet>
    <worksheet name='Top 10 Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Top 10 Death Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' />
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' />
              <text column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' />
              <text column='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A5F2499B-4410-459B-8458-90AC17F75A65}' />
    </worksheet>
    <worksheet name='Top 10 Recoveries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Recoveries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global covid data' name='federated.1rgyw9n0safkil19yuy4m1si954l' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgyw9n0safkil19yuy4m1si954l'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Avg' name='[avg:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' />
              <size column='[federated.1rgyw9n0safkil19yuy4m1si954l].[avg:Recovered:qk]' />
              <text column='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{539FBE98-B914-4146-BC7F-5E34781DCA5D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='9' param='horz' type-v2='layout-flow' w='98614' x='693' y='1351'>
            <zone h='97298' id='7' type-v2='layout-basic' w='84761' x='693' y='1351'>
              <zone h='48647' id='3' name='Global Cases' w='28594' x='35668' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48647' id='5' name='Top 10 Confirmed Countries' w='34975' x='693' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48651' id='6' name='Top 10 Death Cases' w='34975' x='693' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48651' id='11' name='Top 10 Recoveries' w='28594' x='35668' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48651' id='13' name='Confirmed vs Deaths' w='21192' x='64262' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48647' id='15' name='Dual Axis' w='21192' x='64262' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97298' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='13853' x='85454' y='1351'>
              <zone h='10979' id='10' name='Top 10 Death Cases' pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' type-v2='color' w='13853' x='85454' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38175' id='12' name='Top 10 Recoveries' pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' type-v2='color' w='13853' x='85454' y='12330'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24662' id='14' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' type-v2='size' w='13853' x='85454' y='50505'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11148' id='16' name='Dual Axis' pane-specification-id='1' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[:Measure Names]' type-v2='color' w='13853' x='85454' y='75167'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='17' param='vert' type-v2='layout-flow' w='98614' x='693' y='1351'>
                <zone fixed-size='280' h='48647' id='5' is-fixed='true' name='Top 10 Confirmed Countries' w='34975' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48647' id='3' is-fixed='true' name='Global Cases' w='28594' x='35668' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48647' id='15' is-fixed='true' name='Dual Axis' w='21192' x='64262' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11148' id='16' name='Dual Axis' pane-specification-id='1' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[:Measure Names]' type-v2='color' w='13853' x='85454' y='75167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48651' id='6' is-fixed='true' name='Top 10 Death Cases' w='34975' x='693' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10979' id='10' name='Top 10 Death Cases' pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' type-v2='color' w='13853' x='85454' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48651' id='11' is-fixed='true' name='Top 10 Recoveries' w='28594' x='35668' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38175' id='12' name='Top 10 Recoveries' pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' type-v2='color' w='13853' x='85454' y='12330'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48651' id='13' is-fixed='true' name='Confirmed vs Deaths' w='21192' x='64262' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24662' id='14' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' type-v2='size' w='13853' x='85454' y='50505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{49E2CAA1-E0AD-495E-A729-8CAC55DA3755}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top 10 Confirmed Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77AD5365-61BC-41E1-82BC-ADD7194D1ECE}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E145D40-0FA0-46D9-8607-474722DA4F11}' />
    </window>
    <window class='worksheet' name='Top 10 Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
                  <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Deaths:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Uruguay&quot;</value>
                <value>6898266</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7EBCB981-2F62-417F-9275-845F409FE4DE}' />
    </window>
    <window class='worksheet' name='Top 10 Recoveries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E57D05CA-AA2D-4EF9-A1A8-4C3CB4F6B2C8}' />
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2E7D01E-0254-4B33-A4B9-B114F37C23C0}' />
    </window>
    <window class='worksheet' name='Mortality rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56A2E355-4CB4-431E-980B-CA0F20FDDCDD}' />
    </window>
    <window class='worksheet' name='Dual Axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1rgyw9n0safkil19yuy4m1si954l].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBEBDFF7-7399-4CFB-BAC8-B668F887A0C9}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Confirmed vs Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dual Axis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Confirmed Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Death Cases' />
        <viewpoint name='Top 10 Recoveries'>
          <highlight>
            <color-one-way>
              <field>[federated.1rgyw9n0safkil19yuy4m1si954l].[none:Country Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{9BE62179-40FE-44A4-BFFD-B1A52F0CD225}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      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
      9v//Lb/JJuyT0QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      cQTg8FLz/9CjuJq6wM4hAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dual Axis' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Qc13kn+ruVujpODgAGORMkAQLMOZNikERJlEhJpCitVrblINur9dra
      fXv2vPPOOz4++/bZsmXvs2wFW1mUSIoUxSwGMAcAJBgQiTyDGcxMx+rK9/1R/d25XVM9CRAD
      yN85OOjprq66XfXde7/v9yU2NjbGDcMAoVarIQxDAABjTPxvGAZ0XYdt2/B9XxzPGBPHxZHJ
      ZFCv18E5h6qqSKVS4jPP8+D7PjjnAADOOTjnME0TnHM4joN0Og1VVcV3wjCEbdvib03TYBgG
      LMsSYyakUimEYQjOedNnqVSq6ZwnCvV6HUEQQFGUE37u2UDTNGiaBt/3IT/XD5EMzTAMZLNZ
      AJEQ2rYthJIeZiqVQi6XAwA4jtP0kFVVFcILNE+IVCoF3/cRBAFUVUUmk2maLEEQoFwui++H
      YYhsNosgCOB5HnK5XNO1fN+H53nib8MwoGmaGCsdq2kawjBEEARijPJ46feeKHDOxaLwbk8A
      uo9tbW3v+ljeD2i6Q4wxFAoFGIYhBFlRFBiGAUVRmiYHgYRXngQEz/PEe0EQTFqlFUVBOp1u
      eq2qKnzfRyqVarmzEFzXbRo7/QuCoGmXCoJAjMNxnEnjOF7Iv//dFrowDOE4TtPv/xCtMelp
      6bqOtrY2aJomhJ9WWVKDTNMUn8uCryhKk9BaliVWYaBZYIEJ1UpRFGQyGbHLeJ4Hx3ESJ5wM
      zjk8z4NhGGLlk3ciGfJn9XodtVqtSd07XtBvSafT79okUBRF/E558fkQraElvUmrsaZp0HV9
      4mBNQy6Xg23b8DxvyhWaJsZ0q7iiKCgUCuI4sg0AoFqtQtd1MQFVVUU+n4frunAcB5xz1Ov1
      pmvK124Fx3GafpNsm8wFjDHk83mEYSgmAo3vnUQ2mwVjDLZtw7ZtMMaQyWTe0TG8U2i10M0W
      LZeqdDrdJPx00Wq12mSIkpqUNBDZHpD15EmDkL4/1crFGAPnHEEQtPzh0wl/HLIhPlfI94CE
      7ngn1VwQBIG4rmwDnSzwfV88L9u2E9Xq2UIDMKOVGogedDqdblJlVFUVq46sa4dh2GR8ErNj
      GIawMZKQSqVgWZb4u1arNe0QnHNx/ROxwpJNQCzVXBkizjlqtRp830cmkxGqyPGuULO5PmNM
      MGMniw1AzB+pdYqiQFVVoSKrqopcLjclGzkVWLVa5QAmMTTTgVZi+e9qtdp042lVjBvJuq4j
      m81C07RJ1wyCAOPj403C3dbW1kTpua4r2CDbtifRtvRdEup6vT6jG5TP5xPHNBPQ6uR5HlzX
      FerQO2UPpFIpYU/R+N9tg/x4EYYhLMtqesZA9JxpgVEURditc/m9WhAEcF23iZGZDp7nTTJw
      acDxv2kCxL9fLBbR0dEh9HuCvIsQ4gJJu0hc3aHvqqoqJgithjNZEavVKmRaeDYIwxDVahWp
      VKrJTnmnQNdjjCGVSkHX9fflBPB9X8hNvV4XtpRs31UqFdi2jY6ODhQKhRnLbRI0Ul0sy0Iq
      lRLOHMYYLMsSq2j8ZsaFv5XunfSezCIRaNU0DAOpVAqu6wphJl4/PgZSyWicuq5D13UwxuC6
      rlBnMpkMKpVK01iSVnm63lxBuin9xjjr9buELCCe5x2XULxbkFd8+fnIanWlUkEmk0E2m0W5
      XAYQqcn0/HO53CTbdSpoJMie5wkVxjAMBEEA27ahKAocx0EmkxHCpWkaTNNsYmxa6eMktPLu
      EIbhpElVr9fhui7y+TwKhQJ830exWEQQBCgWi2CMoa2tbZLgkm1B2yFRuGQMEj1KE0VWl5LU
      ornaFbquI5PJwHEc6LouVMRWBMHvCsTUvZPXPF7QvSqXy02Oznq9DtM0xTF0nLywjY2NwTAM
      5HI5hGEITdPAOReyOh2E/sE5F8anPAhaUUqlEkzTRCaTEepSOp0WW3+r1Y6Or9VqYtdwXReu
      6wohJeEHIp3eNM0m24EMS1ph6XOg2c4IwxDFYhHt7e3iRtAxFCJALFOSgUq7z1xA7A/ZUieC
      XZotiH16Pwp/3Hl58OBBERUg72byQiqrnHSuarWKWq0mfFitbE1CkwIub6O0OsqCYlkW6vW6
      uMmMMeRyOWiaNskrS3o6+QtyuZxYETnnQkBpR9F1XewopAeapgnLsoR3t16vC3VHNorJ2IzH
      /sTDLmhlpgmeZKgej95Mxhn9e6dAjsT3W+yPTJzQs6H7Rgue53kIw1AsKMSwkWzmcrkmuQWi
      +xEEARzHESE18qIpQwMm+PWpBiq/lnU0EkZZ7yJqtFQqAYhW/CAIkMvlROwQXReIVl7irbPZ
      rJgY8nWJQgWiiUjXo11L5uCTdEBS64BIXaHvybaL7/uwbfu4VlFS3eQx/a5A9hmxP+83yKu/
      67qo1+uC8SFHbLVahaZpwtEox561stdIfmghKpVKQrbiz6PlBEhSE+LHEAWVJHCccyFIxFDQ
      RKEJQiDjhjh+MiCJviTQLqPrOmTbRR5PkvDKHD2FW8gGq/xbLcuC7/tiIs5WsGgi085yIn0B
      qqoKnZjUuveTuiODVvtcLod6vY6RkRFYloWurq6m49ra2oRsEGNI8koThJ6pfO643FYqFXie
      N4kuneQIS5oI8kUJjDEhiKSikOFMMTGMMVQqFXGecrksAu5k+tPzPPEwSYBqtRqACR0/SaUg
      pohA10+iMWUPM6lXskNNPo/ruvB9v8nJMlPIoRlxZ+DxQFEU5PP59+VKnwTGGFRVRa1WQ7Va
      RRAE6OrqEqqsfBy9R6u/vNuTChWn00lNkp8d7S7t7e3iuczIE5xkE9AKmsR1e57XZGzGz0Wq
      Ef1A2eClSUUPmj6XBcm2bbHrxK9BzEHcC03nI7oMmNAVkxxWtH06jjNjlehEe6llmKZ50gg/
      QWZ/stms2DHjIJ8APVNZXmYL13WbFsnEYLikARCDIg+ePmt1oZkgbsBQ/gCh1SpK22L8JiSp
      BUSPyuONj7/V76jX6wjDcMZBZfIKFicRjge/iySedxskjPTMKMyBjF/5GcVXeGAixD6e70Hy
      M52MAtIESGJOVFVFOp0W3lRiWeY6+1phqoEmrXqtVgDDMJrihuLfka9XrVZFbMl0u59t23Bd
      N9EPEb9GOp1GtVpt+XvmAqJwTxbQyk/2VhiGSBkGwqc2w3rkUbCODpi3fx5eWxs450in0yiX
      y4nOvbiaQ5mAU3nhZdlRkgSanDpEH9GqZhjGpJVwrhOhFUMyU6FhjME0TeH5o/ii6b5Pwh83
      gOVJmGTUz9S7OJNJNVPQWGbyu+JoRcPShJ4u1+J3jXq9LpyvmUwGbHgY9j2/Qjg2hmDPHrh3
      /0pMenLO0j2g30bPRP6t9XpdxAZls1kYhtG0QxC7RJS+Fr8JqVRKOJ+AaBcgx5fsdSXMZJtJ
      QpJ6ED+H/INljpc+I9ZH1/UmHXE6yKtD02rQ+J2macJxnKao1JnaAZTR1srTPBvMJayacy5i
      aHRdF85KUhd83xeGeldX17uysxBHT7FLiqIAngfIwZX2BJmgaVrTM5PvKUUkyJ7/arWKrq4u
      QcSQPUexYvV6XTCMTb+eMdZ0Idk5QVvViYqfj/+Q6Y4l5HI5VKtV4WyrVCrThljHz5fNZpvU
      lKQYo1QqBcdxhANtpgYoTcL4hJ0JZGOfPJmzhRw+bFkWFEVBvV6HUq4gLI6D9faCNZ5rvV4X
      xuc7CYo/AyZWcT5vHozzzoX7/Atg2SyMa68VtDWt6GQzyIgHT5IhLedGqKoq/hWLRbEAcM6h
      tTLUyDtbr9ehaZrwxBJmI8QzQdJOkuSfoPgk2srIYCJ3eNJ5SZBl9kr+XP795Icgms113VmF
      iqfTaeFQI/Zppt+dbSBXEoguJd9KrVaDcugwqt/+F/BSCerAAqS/9ifwVFV41d/JrDFZu6B0
      VgDwwhD6pz4J45prAEOH21BdZHYoKdPOcZwm2jvuBAOaZSquGmpJPDtdgMIQHMeB67pTqiuz
      vQkytRq/bqvBAs3sEsWP0Pkoiy1+zlqtNmPDnYwz0zRbOvmmAq3c8ZVqOlBIyYkAYwye54nA
      Me/pZ8DHxgAAwf4DCLa/DrZh/ZTe1N8VLMsSSUie5zVNPi8MgWwUAsGDYNKuLrOQBFVVm5gg
      2ddDGkutVhP3V9f15pRYWQUggZP57PgOMRu9lo6dyiCbyvE2FcibTMdTHFGhUGgSWlIrwjAU
      k2M6loAmfKFQmJOAEK2X5E1vBXLcnAgQe0chKKyjvelzpaMdXFFgmuY7Gj8UhqEIe/d9f1rV
      Ky78VEJHRiaTQa1Wa3rmMrFBO87o6Ch0XZ+8AyQNcqqBnEjX/lSITw7iiCkUm4Ln5DGS55nc
      3fReoVCY9Ds0TRPeZtlrKPsJWnmVpwPVKJpNTu6JuqfxXToMQ2iXXgJeqSLYtw/6mZugrlzZ
      5K1/J0A7MQWokXYRh6y2kA7vuu6kLEE6p6IoiclOFKGcy+WQz+dRKpUSfVOTjOAkxN+f6SSI
      C3GSTj9TMBblA9CKTDYJre75fB6MMdRqNZRKJbS3t0+yU+LsAYVO0FgpEYeOm2tSOalBxHLM
      9PcdL2T9WjbePc9D6jM3iwlOuc+y4BDb97sArfxUJdCyLLEoxcdPyGaz0HUdvu9jfHxcJETJ
      1CiNX753sjfZdV0RftNKC9HmIqSzpT6nM2xngjgTQ8Yebam0BdJEoGvSVhsfq6IoIolCXhny
      +bwoczhXkEMsbje1ghyecbyQqVtC/NxJ6h85PE8kaBetVqtThqrLx1OZHNM0RYYYCb+6azfs
      e34FKApSn7gJfPEi8ewtyxIh1HQuANOmwk7aAeICGl89ZXovSZApV1fO7WzluZ0piOaMjxVA
      UxkQijhtivabwrAkZ5ockqvr+gmZBJSVNt0kILbpRKki1vhh/PrXj8GctxofueJsKL6Dh+/9
      OQ4eq6Jn6Qb08GHsORbgqo9ciR1PPYDdozauuOETWLvwxKZQEs0qB0OS5tBKDkj4yTCm/A8A
      0MMQ1o9/gnB0FABg//BHSP/3/wa3YUiXy+WmbLGZQqHBEZLUnVaI1w6Kx6bLs3Guwk8c8HT6
      qu/7iSoH0aRyGIfMHRuGgfb2dhH+bFmWoD6Pp4boTAU7lUqdUGfUsUN7MHDG5RhQjmBfMYSi
      pXDNTZ/HDeedhmVLujEUdOOac1Zg+679OOuya3Hhmj4MFSfvGscDWvlJ+OOh263uSS6XE/ds
      0kThHFwugmZZYOKjyWUpZ0rWzFnpIwqS0gBzuZxwTMmrp7ztzRa0IsxEN6WkCVl/pxtYLBYx
      NjaGYrEoXhM1SixYJpNBe3u7UF1OBEVICStTTf4TnTO8YNUmuIdexvZdB+H6jfse2Hj1aIDT
      VizHhgUKnnz2ZZRqLopHdmLHkIV8Kvl3yh742cBxHKF7646D8OFH4N99D/TxcUFmJCGetSU/
      90DTkLrmarB0GiybRer66+A35IqiSedC02uy40D+clzPj98ISs7QNE0YVCRUMuYaKgHMjhtP
      8uYSqFw4RRgyxkSUp2yMUdCZnIh9vMKZTqeF8ybpXCe6eptrVzA8PAovvwRLjFHsGkwhV92H
      ecvWAAhwdHAIo1Ufly3rwgvPbMZYpYT2crLPYq5GsVyV27nzl/BeeAEA4L+1A+k//ZOm5yBf
      K35/5L/9IIB26SXIbtoIMIYgl4PfyBuhmLV4tPJM7E2NBiwLqiz0SQKsNDhkCpUgemuqi8Wr
      MUwHivOZK2Q1jOwRAl2ffAfxDLUTuSKTKkShF3EH4Ik2PNNt/bj5ti8CAA689RoK81eib94G
      zGt8ft7VH8d5jderFi0+odcmyM862L174v2hIbBG+R25KALQXN6+FfwwhE9qaRg2xTRR7wrZ
      5pjJc5zEAiX9LYP+phBhmXqbCWa6IyTVIpoLplLBOJ/IUqPIwRMNoh2pOAAZ6zTpTnQwmmyT
      LT9t44y/dyIpULnogLbxDLiPPAoAUJcvR5jLwymOo7292TlHzjF6BtPZjVRZhMI+KDzG8zxB
      bc9E9Z4UDdoK8nF04jgPSw+TIg+PZyUlNeR4wVgUNJfk2SaBpEkcnwAnqq4PY0zkrdJ9kWOO
      ThRot3m3QZX5giCAfuON0FauBK9bUE49DZ6SXEw5DEOMjY2JkjbkwZcTXOhvIlo4j3J9LcsS
      YROzVSmPa/kZHx8XxkfO9+E98ii448C47FKMNPoIkADKmIp1mu79uSCe/0v/T7XKcM5RLBYn
      hVbMFfR7KPjseFW89zLS6bRYhT0egq1ZDSBSYbxGGc4kkDpNiUeGYaCtrQ2WZTX1o6BiDNRI
      xXEckRs826LAYgK0MnZbgehEUYPlhz+G/8YbAIBg337kv/oHGKtUEIYhenp6xPfi10nS1U60
      e16OYo3/hlbXJJZLzj8+UUhqF3UygfR5mXomVKvVSeqPDCJVZBtJ0zRY5TKqd98Db9s2aKtW
      wbzp46hJ9YFmG3worhfnTmdKfXHOUSgU4HkeCoUC7EOHxGfhsWPIKRMxONOt+PHrMcZEpv/x
      CgnFnkwHMpRplaGECYoHOtFhAu9H4Sd7ajp6mHh/2cNOhQqGh4eTeX5EO0e8Cgf5cZyt2+A8
      +BAAwB06CqW3F+qFF0yr8shkSJJcT3qqs9F5qV0S5xzGuecAZAusW4cgk5mUyzrT85JxSjEg
      7wQsy0KlUhF0rrxrvNvpg+8mSHAsy0oMs0iCbF8BkfAXCgXk83ksXrxYfC7LQzqdToy+pQWM
      N9gdMa5KZUbyNCMalAYtG4ezeeCe5yF1w/XInLoOcF1gxQq4CZURZjMBaObL6W5zQSqVQltb
      W1MplqTrARAPmcZJqwflmb6fC1HNBRSzHwSByLybSdVpxpjotQCgyUlFSVZx+SIjNs4Skq0U
      nH4a7F/fD14uQ5k3D+q558A9jmhbuo4W/1AeAL2W+3RNBWXVKgCNwlMzGFS8sFUcNAmOZwKQ
      MUXOsKRrJI1BvidUobq7u3vO43g/ghYu+b4R4zIdZUxFxWgSARPPohWIIqZJJr7r+aj//E7w
      Wg1gDOb116Gey2E6P/1UtqWYAPHtqtWJvHoFR4aLmDewEGlDhe9YOHT4CDId/egpGDh44BCy
      Xf3oLGQA38b+Q0cQhAr6BhbCHhtEyfLR19eFo0dHAKZgwaKlmG4tJeOGdM9UKiUmw2xWYtJJ
      4xNgKv8A/R93Cn6QdgCSDdLliXufqb/E8zxUd+6Cu2ULlL4+ZM85G2YuJ/K6k64nFx+gbp7a
      gQPwtm4TSfPus89CXbtmRmNvBdrdZ+QHYCzAm9teQ9EqY+9IDVeesw7V8aPYf+AQhp97FQOL
      2lFxGMrb3sT1N1wPzXcxPDSIt3fuwLrLb8abT9yPeUs2oNCWxuDgIHZvfxVX3f4H6J5BqA2p
      QQBEqqK8vc4U8eOn+90fNGFPAjE58kJBFOR0CMMQ1pFBVL/59+ClEsAYeKUC7YbrE3s1xBum
      EBFh2zZy6TSgqmICsHwebqP8TCtyYrpnJ6Ka6Q/6l8wCaVh/ztnobGvH4gV9AID27l5Uhw5B
      6erHop52HDr4NphRgKYAerYD55x7DuYtWoU1i0yMHjmKwfEa8h39uPDc07DolLMxkJtboJlt
      2xgdHZ1RD2F5JSfn3HT8f6tzANEE/CAaw7KQzZQS5pzDP3gAvNHFBZzDf/MtUT2bGLdsNovO
      zs5J5w2CAKVSCRlVhffkZqAxWbRT1kK//np4noeRkRFR9FhGK+GXn72YAElvThaQANtfegFd
      KzZg5UCkB1t2gCs/+Rl0OAfx4o5BXHvTZ5D2R2B70UDH9m1HYcmpMAIfn/rKX+DCeXW8sL+C
      Pdtfx4pT102r/kw1+DAMMT4+jmKx2NLxIRvzrus2lUOfKyjm6YMCut+ZBqMHYFK9pFZQFAX6
      osVgjZKUYAzaulOEGkUJTRRFHBdaRVEi/9Grr8F98kmg8Zy1DRtQVqKCYf39/QAgQthn85sI
      2kwcYDxwcfjAfrz4+k6s2nQBqkcP4exTBvDgb59D9/IzcPmqTtx/3y/Qt3IThrY9jsHlF4AF
      eaxf2QVwB28+dx8GnTxu3JDG0NvzMNA1O3d90opNHD0ZTbSN0ms6ntLipopvmu7aMkh3pYd2
      sqpJ1BWICo/JIFV0KsqcMYbM/HkI/+xrcLdsBevtRebMTVAa5fHJG06Isz9UwIvFJ1ujlAtl
      jOXz+chPMIMixknsJjty5AgHpg4carL6/RqO1VR0tyXzPMdGR9Edq/HeCkl0WCvEJ0Er3a+v
      r68pToTCnqfCVLRvvFw3gR7iXMoWvtdBOyyVujdNE6Zpwvd90ZhOTl6Z7lyUGdbZ2Tmpsh/d
      e+r7S2mNQ0NDUVFi34f/ne8hOHgQ6sACmP/xy+D5PJTRMQAcQWcnvAZN29aoJRqH7HeIq/iT
      QiGAyaseccHR+wwZPRRVx+I3IJfNNlXeSsJswy7i45sKcgBbK+Ftdf6ZxCjJ13FdF+l0+qSq
      3Ox5HmojI3Dv/AUwcgy4+CKoF5wvdlhi06hLz3SMEBmqjDHRhpbyASg5n+J4iPamQDgACHM5
      pP7wD8AqFfBcDnXGYPz2cVi/eQDgHKmrroRxzdUiAC9OdsjCL8sEkRxaq5kRRyvjMZ6oTscm
      gYSMqrSRkFEjs6S6L/HvTweqiQlMnQ8cR6vrTjWByBA/UQFz7wUEQQD7l3fDe+ZZAEB9/37o
      Cwdgrlo1UaS2UgUcB7aqQmtvb6orRemnchISsXjyawAYHh5GR0eHuMeaqkJ5+234r78Bc8kS
      sHWnwOccNdcFT6eRNgxkFRXVBx8CGrE/7qOPIXv5ZTBNE+Pj4ygUCmJSykIvQ3ayNe0AM1EV
      gGaeXH6fXs+kNVCcYycOOB7UNBs6knMucoOpHdN0u8BUjEHSe/HfbNs2VFWdMsDr/QTOOcLx
      sYk3fB9BKVqYarUawh07YX33e+CWBf3MM6F98QtI5/PgnKN69Cisu+5GWCwiddllsAYWCHoz
      XnwNmJxkpRwdRu0f/jGKJlBVpO/4Atj605FKpTA+Ph6F3QBghQI49YbL5cAVBdVyWSRp0bmT
      NBT5+THGoMjb90wCvpIMP/k9eXtpupA0mPg5SOhbraIyfRl/Lf+j9+TfMZ16Ej/ndBRpkmPs
      ZKJGNU2DccnFYJkMoKrQVq9CatVKoZY4Dz4Y8fqeB+/FF1Hfs0ckR9V+8jO4Tz4F/9XXYH33
      u8g0En902wZ/ajPw3PPQpb7SlMUlVJN9+yLhB4AgQLBrNxRFETm/AOCFAdK3fx7a6lVQV66E
      edvn4QGiaFpSo20Z8TgkjbKViE5MWjHlhy3/i6/OgludwjmRpCaRoUQhF3Lz7fhuMxUYi+qY
      UrNoEu4kzIQViv82+R7Ir99v7UmnguM4YOvWIf9Xf4mwXEJq6VKYhYIoO8IyUqUMVQVr5IV7
      nofw6FHxEa9ZQLUGLZ+H/d3vw3/rLQCAvmsXjC/cLvR1So0MwxDaiuVAOg3U64CmQTtljXh+
      VNIcAPT2dpi/9xVoqgovDGFLNic102hloMff0yj2moyP6HepMwqLThIQej0VRSjbHXQM8evx
      kIVWW1grcM6b8m+nUn+mO5fsqYz/Nrn2/smETCYTUckdHQAmnlW2QW6wmz4GXqsiHBuHccXl
      UOfNi3aGahWQ7qe6cACsvw/MtuHv3Sve97e/DrOhDVBmF8lb2N2N7J//KYK33oKyaDGwdCk4
      D5uq/5GaSy2ygEh2+vr6hKyYpolqtdpUJaQVNKKg4iucbC1PhSQdPck2IMTtBfn/+LlkwYsf
      G79W/HVFCp9tpbZNpcLEzyt/X9d1dHR0gPMoa+xkal/Uavf2fT9K4+zvh/H1/wRgokCx67pw
      9+1HIOeElMoI33wL6ilroS5ZgmDnTgCRJ5di+LW9bwOvvAI+fz6088+DH4YIe3uh9Pcj5Byc
      R4tLLpdDqVQSz0DX9UmtsOSMsVwuB9u2UavVpm13qzHGRDIxMLOSKDJa6cKzMYLpWpQYLeNE
      cOxJ6kur8xM9R44uWuHpYZOxrqqqYIGoOsbJ5g8g0E6aTqeRTqebhCkMw6jIcC4LZppRxCYA
      Pj4O61+/g+yffQ3pL94B/8UXAUOHtulMDB87hq4whPXP347YHMZg+j74xRfB0DQwAAGAoPHc
      qtXqpCDIJuEH4D/wEJzXXoO2dg30a6+JQqgb4RQUSEn50vHvCq9cuVwWkZNJLv8k5kb+LOn4
      +AUJSSuvXNNd5oJ/F0iaBJxHzZdlL6XneUJPlT2NnHNRAKxcLouK1Ce60NV7AaQCEajdkKIo
      sG076kDT0YH0HV+AfeedCI8ORwf6PoKDh4CFC8EuuxRA1AOAWQzs6LCgMsE5gn37YaxcCev7
      /wZeLkdFsC65GPXGMZRfnrSTh1u3wbnvPgBAsH8/lK4uKOedK8bMeRQOUywWAQAdDfWOcz6R
      D0Apa9RWngqazuTmzJQ9iiM+QWhrpF2gFbVIbFG8pepM0WqnopWfCubS7pjUIon6XAHRJBkf
      HwdjDJ2dnSeVYywJVLFZJkyCIICyZjXMW26B9U//G3BdsEwGyqpVYiUn5PN5sKUpsI528PFi
      xDadsQHOPfcgHBoCANi/eQCZ007FuOMIdVOWITlv2GsINiEsFqHFNBkytOOJUU1+AOoOefjw
      4aa+THHqL46ZFDWia8R17yQVJAxDVKtVMWMpoYVKYlDnRHlWT+d8k88fvx4AodbUarWmMhxJ
      9YKIE5fPRSui53kn5QQIGlXYgIl7Fuf0wzCEumI5sv/lPyPcfwDqqpXwCwXoQQDUakAmA5/S
      ZCtVKLk8gmIJ+hlnQN+0Ee5TT01ckHOgobtrmiaupSgK1Hodzk9+Bn/XLugb1sO48koozzyL
      8OhRKN3d0M86E0HC4k2GtDzmSdWhqUYmhT8QyMBImgRJNkMrJijuiGgFMl4AiB5fsoONSrLk
      83nBQ8ch64tT8fs06eTqdrQYJAkzqQCk+3M+EW4d94OcLCDVjsrRl0olEcmpuHq/NT0AACAA
      SURBVB7CfW+DtbWB9/WB9/VB6e8HP3gQwd2/gjs0iPDoMNSBAZhf/hL8XA7ur+9HcPAgAMDb
      tg3GwYNIXX01rJ27AABM06A0duBKpSJqAum6DvPZ5+Bt2QIAcDc/DW3tGmT//E8RDo+AdXch
      zGSaGCkAojWuXApTqEBxUMnweDlDWZCSfAVxTCUI8dVjKjvBNM2mlZixqNBUpVIRVdaSvjud
      4MtjGRoaEtXFyDeSBGIUZD2SQnyB6evRv19B95zzqGDB2NhYpAJZFth3vofg7bcBXYd52+dx
      bMF8dJkmvO98D+HwsDhH8Pbb8F94Efo1V8OW2qAiCMDLFeHdBQBeq8F99jm03XB9ZA+WSgi2
      bIXS3Y0gVuaGOy4C0wQWLUTY2DniYweAnp6eSbIwaQKQPUDbnbhICxZF/vxEIc4+0UpLXUao
      9j4xEiMjI016+kzYK3nCUTEmsoGIcSAbg3431QqSK7oRn019Eej4kxF0H/L5PHp7e6Poy127
      YO3bFwmd68J/9llkv3A7NMeBMz4++RymCeY44EVJFw9D1H/4I2ixNEfWCLlWLAv1b/4DwpER
      AIBx6SVQly5FcOgQtJUroZ+xAamGwSunWuq6Luw6ctbFkbgDTKUqyCrMTIRednbNVDDi3mh5
      hQUifZQCq+iBjIyMYGBgoEmdaWUgyzsO/aZ4l0EATbsLMWNBEEwq2zib0IuTAYqioL+/P2rB
      2t4OpFKR9xaIcn+zWfBUCtqpp8LfuhVgDCyTgbZmNfQzNoCPjyM4cqTpnLxYRLBzF4zLL4P3
      yhZoy5dDv+hCeGEIZXBQNMYAoiK76a/9MXitBpbLIdPR0aSOlstl5PN54Q2eyiGaOAGSDo4b
      kjPV5ePfne5Y+jxuc8RVmXw+L2rvVyoV9PX1oVQqiXwACrONjzOuopRKpaZSHzRhqQQKrSik
      gyb1tvqggQzeMAyBri5k7rgd7uZnoPR0Q7/uI/AaNHb6S3cg3LUbMFOA76P+gx+h+n/+X9DP
      OTsKYouzN5UK1KVLYX78Y5Hq5DhQTBPo7Y3si8aOoq5eDV9RcNSy0KbraJfK1VDINiXvkxwk
      LYaMMbBqtcrjnVDq9XpTV744wyML42wrprWaMFPVi4x7pA3DEIJIRawUJWpMRxlM5C6nOPO4
      MBPk4l006UilqdVqoi5NKpU64cVs36+gVZYSmmjBoTAFxhj08XG499wL7rlIXXcd7LvubiqV
      DkWBumwp1AUL4L38CjipLqoKdeFCBIcOgaVSMD97K5QN64Ejg/BfeQVKVxfUs85E0JAXatAi
      7+iUu01Za5ZlCZU+Ln8td4CpvLoz0bFl0EXnypDEvdMy4yICpBrUKDnzSD2iFkSlUklQqHFQ
      v4NMJiO20lKpJEIePghqTRxTOTGBiYblKc6BYhE8l4PfuE+6rsP+3vcR7D8AAJFjLB4wGIZA
      ECD92Vuh9PTAvvMX0ftBgGDfvmgMvg/3wYeQ2bAe3DRhXHwR3HQaY8UiGGPo6emZ1MaKmEx5
      3LlcDrquo1wuiwlKrNaMbIBWDM1cBLkVppsY8RqmqqpOKnluWZZoeKGqqmij6nke0un0pEYZ
      dF6iU+Ux5vP5Kdv5nMwgPwc1nZPJD03TYNt2lBxTt1H/9rcRHDwEdWAB0v/xy1AbxcPCsQkD
      OKxUkLnt87B/9SuEwyPifdbWFnH8a9fCpijQ+Fjqdbj33gfn8SfANA3mTR9H59lnTQp7l5Ek
      R6lUCh0dHTh06BBs20Z7ezv04WGo3/jGN/5H3NHjOE5TKMSJ2vZlOjVJrZKTJlr5Eeg86XRa
      sDK0u4yPj4tVnJxp1Ggjya4h55/cWJvwu+yb+14G51yEN1AfZZIH13Vh27aIuTde2RJljoUh
      eLEEpVBAYf3pUUSv60ZRoAqDcf4FyFx7DVKXXBIFuo2OQl28CNlbPoNsdzf0jnawU9fBe/W1
      SZOA1+sI9u4FPA9wXQQHDyJ15RVCDZ6NbCpK1HMunU7Df/4F1P/pf0+9A8xllW8FeYUfHR0V
      Iavkc6Bq0Lquo1gsor+/v4n3lyeErE4RfN8X6o1t2wiCoKkpBY0hbpB/qNM3IwgC2Dt3wnvs
      cbBcDsZVV8AxDJiKAr7/AJDLQevrjYiDuPrR+FvXdRRuvAH6qaeC+z7UhQuRSqcj+vqSi2Gd
      dWbUmpa8x5qGzJIlcM89F8799zcPKMbrK9msyPqLExJxticpLot2de/ZZ4EgmDwBOOeCL51O
      D5wr5ASYDtdDuGMH2MAARvM5DA4OTltWndSdpJqTxODEvy+DVChd14XO/yEa9/XoMGr/8q8I
      R45F75WKMD//Odj//G34b+0AdB2Z2z6P6vJlUFeuhHHJJfBf3w7tlFOQPu9cwZ6l0mkYDV6f
      dmk53Ib08fHxcaTTaWSzWWRuuA7Bnj3wd+xoHpiiQOnuAsvmYHzyE7DqdRiGIVJfZRWYKs6R
      lkCl7eN2qzpvPoKdu6bvEHO8kyDp+93d3RHbUq6g9jf/M/IAahq6/sMX0bt+vSiclCSYdB4S
      /njVMjmbLOm7NFnIs/xBVHOmQlAuIxyfoCeDQ4fBDx+Gv2NnZLg6DpwnnkT7po0YGhpC++du
      FTaXHC0r2w1yPVG6/93d3XAcB6VSaaJMYhgiOHBg0pjU5cuR+9M/gWaaqNfrMBrNsV3XFRQn
      7e5y6UbbtuE1SijKqrdt20h97Ea4zz+fPAFoBZ2psysJ9D1ZtycIOnL3rgn3t+8jeP0NqOvX
      txT++LlpjPHP4pMuzmCdTFUcTjSM/j5oq1bCf+NNgDHo554Dls+DpVLiWSk93QiCAD09PaKh
      xVQLJDFycVuT9HiR7KJpYJ2d4IcPNx2n9vfByGREfaKxsTFho5Kt5zgOenp6oB46DOfe+wDG
      kProDXD7+kQ4e9MY02kwXU8Ohchms7Btu0l3ns0OkCSE8nkURYnS6xYuiugx14144eXLcezY
      MVQqFcyfPz9xdY5HIso3Pyk+Kf5wKOrzQ0wGYwzptjaEf/iHcLZvB8+kwZYsQcgY0l+4He4T
      T0Dp6IDx8Y/BC4Km5JipNAXy0SRdj/r7MsZg5nLw/8MXUb/rbvivbZ84sBHmIj9n+fnTObjr
      ov79fxO5yeHYGPS/+DpGRkawaNGipjGGYYjU9dclO8I45xgbG2tqLHc8EyC+Ldbrdbiui472
      Dih798B7bTvUxYvhr12Lqh191tXVJXagJEFuFeQWf1/e/qh8Sbwv8AcJclXmVpBVCkLSQkMG
      JS2arZDUi1mG4zhRT4lGucN6tYrqv/07vJdfgbJwIdK334bc4kUiV6NWqzXVJyU50TlH7a/+
      K3iDSWLpNLJ//X9jtFxGe3v7pABMVVGSJwDdhFKpJAodzRZJK0LSZJBZnVbVKJK+H/9MVrmS
      jidv7sncnG4mqFQqqJVG4TAT7bkoBMSujOPw0TH0zF8I1StjaKSEvoWLkUtp4GGAocMHwTKd
      6OvIYvjIIfhGAfO7slFPiM5+dLdnZxUiQiQILWxERsjP1q7X4do2/CAAFAWZTEbsIpTvOymy
      U1Xh3/8bOI88GqlAV18F9ZqrhVGcaBe2mgBANDOLxWLL1XYqtNLT45NgOl0//nkrTn863V/T
      NHR1dX3gjd5KZQzPPfArjLevwTVnrwUA7N+xFfuHRjFcVnDGsgIOjZYxbin4+LWXYGzP83jo
      9SqUYhHnXXc2dm/dhXJpGPmOfnghR7Vaw3U33oj+zskTgBY16gREUZmcc1TGx+Ht2gUlk0Fm
      5UqkYmEm5I8oFovI5/NNNVjJ55MUem6oGvjRIXAA6O2F3xB+siupBikZx1OyQMTLx2nRmWAm
      q2wrFUZWfWZyzpkE580ldfLkhI6zzz8Pm/dOhA3Pm9+HJ598EQs3XYa+Ph3PPbcFS8++GgCQ
      autG/ehrQH4++roG0HEG8OKrGSydn8Jvn92CfM9y6ErE9FBCEflogiCAcuQI6j/9GbhVh3nD
      9ShceAE820btX/4V/rZXAUWBf9PH0X7jDU12AmNRGEtnZ+ek50lEBjU0pIllF4vwX30tasSx
      8Qzopona2Bgyx0YR7tkDZflyKP19ovl2W1vb1BOAAsHISDkRfPl04RCyKhMX6pmMoZW9Qt7h
      D/oOkAQ7TOMzn78Zv3rgaQTLL8TNn/0U7nnwGeC0RRg7+DbWXflJ+FsfxtuDhzF8cBwXX3oO
      XnzsN7jqY5/G9s0PoWoH8OyxSfdd13XUf/KzyJMLoP7Tn0FftRJhzYK//fWIVg1DuE9thnft
      NZMMZdl4jmsRRL1Sl9Lyrl2w/vnbCA9HYdbqc8+B33wz0iMjsH7y04hoMQxk/+SP4HZ3o6tR
      wXzKCUDOBMuyTtgKOhO/ghz+PBPDNz7mJMRb8HxwUcNdP70XR9wQBvNQrdSxKGPh6a17sO7c
      y3F4x8t44c1D2HTRlXji0UewftN6bHno12CdK7HUGcPmrc9j796duOLCM/H0b+5Cz/IzkEsp
      8Fr0DeFSYhV3HXDXg5rLguXz4GNRDVKlEcKeBFntkXd3+XjXdWE/+pgQfgAIDhxE7e++GbVV
      IplxXfg7doJ3dUF1HPhbt01tAxBIb5oqyWQ6JOnlSZNBrtNJIAZhKuYnfh75uoVCoWVZjQ8a
      KpWKsKHcehE2z6OQSaCFQxfHSja6O6Y3bklfl51NQINufPkV2D+/E9x1kbr0ErR95tNQdR2V
      V1+F/fAjUHI5ZD76UeQGFsx5gXIcB+Pf/3e4jz029YG6jsxXfx9YuBDOt/4Rwdv7ZjYB6EfK
      FNRc1aF4V5C4oyyuAtHns6n1L1+rvb09sQXPBxWzWcCoHZIcY6MoClzXFcVogcmxY3SvgyCA
      6zjIeB6478Ps70dais8i2/J4PfJhGKKy/wBq3/seggMHoa5cgWD3XnCrkQPQ0QF900Zoa9dA
      Wb0aGBxE9a//BgiCmU8AGYODg03pgbMZfJwBSjJeZeGXnWezmXTE+Z9MhWvfKYRhiHqpDGf4
      KJDOwDdToiqHoiiie3sul5u2ENj4+LiIxwciP0R/f3+TfyYJZEQDmJHfJgzDqDpIuYLa330z
      StIHoHR1If3lLyFYsGAin7tWQ+1//i+ER49OHwuUhHQ6Ddu2oWmaaEFEycdJP0CuG5TE3dPr
      qdif2Qi/YRiRhX8S1ex8p8A5h1UqofyP/wT/rR1Rxbcv3QHMnw8Agn8nQmE6wWxra0OxWERb
      W5voKkRJS1Tzh/q6yajVasIRa5pm4jEyqKKHvWtXczyRmYKycCFqloVqtYpMJoNCoYDMV74M
      9+ln5jYBCoWC4Hb7+vpECiVVlSNhpUE5jiPi9AkzEei5qi35fP7DcIc5IggC2Ntfj1gazhEO
      D8N9/AmYX7gdx44dQz6fb2pCMR2ISSR5IW1DLoNJubvy+eQiCLZtixyF7u5uoRHQM5ard/i7
      dot+wgAQHj4C+0c/RvbWW5DJZIQPIdXWhuzNn5rbBGAsSjurVqtQVVV06mulX6ZSKZRKpTkJ
      Zvwmy2xOUjFdWlU+1PnnDiWTARgT7AnLZEQnHPLYJnHzssoqL3CmaYp2SEkol8ui1A2FO8RB
      UaVyuR5yqpHcMcZE6RQZ3suvwPzkJ8AbsUsdHR2o1+tRZe/Z357m2kGe50XVumK1hGQKk5iY
      SqUi/gfQ1H82/h0ysoIgELuKpmlNqg3nvCm2pVarCeOKavt8iNkhDENgyWKkrr8O3nPPQ1mw
      AOoVl8NHpM7Q8xkaGooCCxUF6W2vwn38CSg9PTBv/QxKjQlClfVI3YmXk5Hh+75ovtdqXPFJ
      F1/8OOfQzzyzOckeUfQqYupwupGgMycjmEBFYSnxnFpotgpgo22MwlqLxaJYFWhVpxtFiQw0
      w6nx2lTVI8rlMizLQjY7u9iUDxGB7iEZuVROnAxg+bgDBw5AVVX0+gHcv/070dpIP+9cKLd8
      Bnv37kVvb694vsVisWWxYwaAD4+AOw6UBfPBWzzjY8eOobuRczwlxsYQ7j8A/403wIMAqSuv
      BObPSzz0uKxEakVUqVTQ3t6ObDbbFKQUd2SR4BPS6bRoYgBEqz6t8PLuMRNjlnYlijT90Os7
      c1AhMcdxRBkZOeU0fh/DMMT8+fOjNNbDh+FKKzGvRHnY3d3dYgJNBcYY/GeeRf3OOwHPh3Hu
      OUjd8pnESTAVa9iEzk6oXV1QN56R/LmE45YQumGWZSGdTk9iX6a6OLmxiQ8mQ3mu+juVR6Qc
      4w8xPcIwxLFjx1AsFlGv10UnmKT+EASyBdLpNNSlS6Fv2ADoOlh7G1JXXYkwDNHV1dWkhraS
      A8YYnIceBuo24PtwX3gBXKoCJyMIAhw9ejR6tsPDcO+6B96jj4HZNiqVimi2WCgU0NHRIQqn
      TYXj2gEYiwqmqqqKSqUiikcFjc7dSRGacdCqfSLSE2m3oKZ/jLGJ+jWNRJgPjeNmUFNBedFi
      jIlITFnvTwJXVZh3fAGpY8fAMmnwFqpnK0HknEPpaBdJLCydjrLPWhzLOYdSr8P6539B2Civ
      GA4Pw7rsUlHaxnVdaJoG0zQntd2N47iJcqURq0219Ul/l0urtApQAyA6shATMJWhNB1oQhaL
      RTAApc1Pw/7lXYCiIH3zp1A45+wPUyElUNkT0v3lZ0QlR2bE2hkKWEPHbjVV4rq7nG1ofvZW
      2L+4C7xWQ+raa1pOIgqAU2u1pqrT/q5d6L75U8KAtm1bZKtNNQmYVT/+CQBMrLxUxNY0TeEA
      oRVYdoTJTQ+oHEpHRwfa2tqOeyxUza1eLKL+s5+LepL1n/wUqdNP+3ACSKAwB3omcvMIgdDH
      85sfw3BZwWXXXoV84/Yd3rkVav868JG38Pxre7F6w/lYu6QH9eIQnnrmJcxfcyZOnZ/Crx9+
      CmbHAC7YuBzPPLkZC9adi1UDnc3X6O5G+ve/AmD6it5dXV1gjhOVT2x4e/UNG6BpWtP4Pc8T
      pTLlvg/yuewf//jETABgIvSA1BlN09De3i5SKwcHByO90TSR27oN1hNPQOnuQeqzt8BuRJy2
      4olnA8owqnNExZQa4K7bVF/mgw5ieqaDX6+gFOi48IKNyDSkxa0M4/nH7kPXVatg7D+Ajedd
      iO62aNUOQoZ1Z5yJl554Dl0bepFZfgbOGOjAsSOHsGL9GdjyyotYNXDNpOvMxtPPUylkvvr7
      8LdsBcvnoZ66btL3HccRNmE6nRYRC4BUKPmNN4/fCCZQ6HQulxMGqK7romcWeQIzxRLse6IS
      ef4bb8C979ei1F4xVi14tiD2IgxDpAqFKOk5lwPL52F+9EYYUhXoDzLkmqpAVAy5lYoa8gCH
      39yG+x9+ArXGfHnjtTew4axNUFgIuzSKh39zP3YfiQzXXC6DF558BH5XL1ig4K1nHsBTL25H
      75IVKA/ux/JVp4oedJxHJRhLpdKUujr5Edrb2ycaEebz0C++CNoZG8Aagi7/I+qc2EHqMSyr
      Xtqp607cDkCIU5a6rqOnp0fQatrQEFzJY8xrNbS3t6PW+H8u4JyLGU6OM13XYVx6CYwzN4GH
      IZhpwmt4M0/GTo6zAdHE9BpA66R2Blx64+dg7fwtdo06OL2HY/eO1zE8tA/FhTpuOf9inGZ4
      2PzGbqxd2IVqsYKLr74BLz3yEIqrzsUnb1qJlzY/jlefc6AvWIXlfR2i19v4+Dhc10Vvby9s
      28bY2JgInGt+PlGOMFONyEMdhrDqFsKQwzAzUEIPbgBk0imEvoeAqTA0FY7jiGBNURFOym40
      b73l+BxhMwXnUZUJ27aRUlV4P/oxvC1bwXI5pL94B4LFi6BpWmL6W9K54lwwPUya8eQNDoIA
      fr0O+wc/hLftVaiLFiH3pTuQX7y4ieP+IE2GMAwxOjoqdmm6V3KdzaZ8bvh46anHUE0vwvq+
      EG9V87jg1CXwyoMYZz0Iht/A868fwSVXXIDNTzyPizetwBNPv4yBU8/F6QNpPPLIk5i/7lzk
      a/vwwpv7ke5ZghsvO1s8s7GxMXR0dIjwiWq1Ct/3m1piFQf34IlntqAaMHzsk59GLizj4Ycf
      xqED+7HgjItReusNhMzDKZd9FNaOBzGeOwvXX7AatVoNqVRKZH9VKhVRMFn4md6JCQBE8R6V
      SgWMMRiKAqVUAlImvLQpnFbt7e1ThjDUajXhaEuaMHG2yfd9FJ9+Jmrb2UDq6quQ+dQn4b21
      A6FVQ+r008EawVhUSPdkxrFjx5r6vwGN+KojR+Dc92uAKUjdeAPYgij6U14gXKcOppnQ1YQF
      I/RguUDGnJ5kkFUR6sEQb1JCpS/Jr2SXB/HsK/tx3sXnId0gpl544hGsOuc8bL77FxipK7j0
      ozdhaaaEzW+6uHDjEhEgR8WPqRKdnLfwjsQLc84F+8I5hxMEQKOiGBqDpCi9zs7OxBh+z/NE
      j1fS6+KITwbPthEeGZw4QFGg9PWh8v/8v6L+pIg8MQxkv/oHkaq0dSuU/n5oS5dAzeVgNlQ4
      YMLZ9n7dNbq7u0XJGwJzXVT/9puink6wezfyf/PXCBtCY1lWJIiKhmDbVtj79kFbdwrYihUA
      GgkpjfguXY0CIykkZbp8jGw2K+qDEhRFEYWNOec4uO0pbBvTsWJhH2CXUFKycPa/BGPZOWj3
      hlFJDWD9vCr2HBpBiH3Yt9fFmhX96Mg2T8ZUKoWenh6Mj4+L8I53ZAKQwFIgnBwqIR9DW2Ch
      UGgKeCNPs65pUA4cBPdc8LVrp/QvBEGA6uanYd97r3gv9ZFrYZx7DpwHHpz8BdeF8+hjCPbu
      nchj1TSwQgH2lVdETRs4YH7kWhRWrzq5wq0VJWpZRAWlCnlwKRRFhB1v2Yr6974PBAGc3z6O
      3H/+OrBgvig7PjY2huHhYeTzeeTz+YkSm0GAcPeeqMLb0iXi3EA0eaaiphlj6BhYjj77IKo1
      Cztf2Yu29ZegvW81Tm/PASyPyza6GCwDF67ux65Xh7BiwITrTxi7cnAk+YpKpVKkSZzwmznF
      D8nlciJqVKal5IngOI4on07lK0hP5Q88iPoDDwKcw9u0EcpXvoJMIYG7RjQBgl27osoDDSjd
      3TAyGaSuuBz1u+4GfD+iRsMQID+F3B3T98HHxmD/7OcT5x0chP7fvoHcHA323zVkG2mqRHM5
      xZRrGtK33wb7V/eCKQypj31UCCkFJDLGohZHRGC4LoK334baUJUYY+js7ESlUhEGNeccCueR
      DfbiiwBYVNv/po+LMZIfCAAY50ClAug6uLQj5LrmY1NHf4PdWdOYkBP3v2/RKvQ1Xp+66Rzx
      Pv0+a2QENgfM7i4YphkRJIYRJXXN8T7PCcTRt7W1IZfLiQpfFE8ETDzAWq3WFBqtqiqsp58R
      Au29+hrcsVGYuWzig1ZVFdopp8B97vnooaXT0FetjIqkXnM1tNWrwOs2wtFReNu3Q1u+HNop
      a1Hdvx+8EdWahPDIEQS1Gvg0IQLvBoIggHXsGNx9+6D19CKzcCAxN0Lmw4UtsGwp0n/2NQCT
      iQbB4K1dC/fpZ6KFI52GunLFpDFMyvirWfC2bAVCDoDDffoZpD5xkziOVmcWhnDu/AXcZ5+D
      kssh/cUvgC1bJsZbLpeFoU5kR7B1G7yXX4Y6MAD9skvBE3aS4OVXovZLngfn6qtQ+NhHYTbo
      +kql8s5OAAJ5jrPZLDKNZAsyeuQujb7vQ9c0BA8+hPpLLzfFeMN1Yf3wR1Buvw25BQsmhV6r
      qorceedCyeXgHzgAfd0pyC5aFGUomSaM1asBNJJqLrpQbPPs638O99XXEBZL8LdtA3dd8FJz
      T1v3tdcQ9PW9p1IuOeewRkdR+uu/QXj0KFg2i+ArX0bbxo1N6loQBChvfx31hlCkbrwBfPWq
      lgUH5OBCdd0pyPzJHyHctx/q2jXgvb3gUrK87IehMcHQoXR3i7gdZf68ptXfdd0oU+vQoWhy
      eR5Cx4Fz/2+Q/uM/mtQIRfzeI0dgfee7gOfBe+llAIB+zdVNk1dVVVi/ulc8P+ehh+Gcfz7M
      RQsn2t8e950/DpDQZjIZ0cOLGB7GGBzHQXXrtoidSID/2nZYd9+D8LbPwzCMpgR9xhjMTAb6
      mZsQbjyjqeWRPFkoLINQWLECwdKl0cS49TPwSyVU//5bwu0OAMHb++F53nsquC4IAjivvoZw
      MDL6eaUC59nn4J9+etMEsG0b1r//AGGjBHn9Rz9C9hvfQMmuC3VETkcEJoTb5xxsyRKwpUvh
      BQG8RuwNqUiO4yCbzTZnaBkG0l/8AtxHHgXTdRiSkJYbRWsZi0qjQ9rJWUNnp8BK0uHpWuHR
      4SZPf3D4MPTG8fIO19ScT9MAdeIa01aGeydB6pEMTdOAWrXFNyL4b++D9/wL8NedAj2hwBKp
      T0ngPGrr6TQeZKqRoUbjSKVS8AwDzpmbmiaA+/zzKBfy4DfegHQ+/56YBIwxKN3dTamMSiN/
      VgbnHLzB2AAAHy8iKJXgKayJfGgFzjm0BgvmNGwzKjgsd2uRV3mlvx/G7bcBAELOwRqOS6r3
      yTmH0t8P8/rr4DzyKJTODhgfvRGe56FSqcA0zabQ5jAMoa5cCdbVFYVO6zr0TZsmNUH0fR/m
      pz8F+6c/BxwbqRtvRCUMkbJtMaESm+S9V8AYA29rh7trZ9RUWd4KGzOZVyrwt25FuGsXtI0b
      oU9TPUCG73koPfEkKn//LdiPPIogm4ExMNA0YcIwhP3GW/DffFP6oo9g506gvw+phlr1bkNR
      FLD2doS5HOC60DdtQvb662AS3dwA5xzukcGmyglaTzewePGkBSj+Pd/3kRodRf3vvwXvvl8j
      pSgwVq8Ca3haOY+alluWBcdxhPrEWNTa1rIsERIzNjYmmlaEYYggDKEuXwbz6qugXXA+gkau
      iGVZyGQyYlKJyWXoSJ1zDrSlS2FcezWwbGlidfFxxtD+kWuhX34ZeKMcS7lcFt7m98wOkATG
      GDId7cCffg3WY4/D/uUvAc6h9PUifccdqH/ve9FWiKgUnnvkCLINr99Mst66hgAAIABJREFU
      YFerqP/il6Jjef3OX8LctAm6tCB4jgPv1W2J3w/Hi7MK4vpdQC4MoCgKMpddCv+iC6NWQYbR
      1EqKVEvWHou6bYQNU780alElo1qtRmHu9/1a6PPOw4/APHUd3J4eEXXJGENHR4dwZqmqKur/
      00Jbr9fR09ODo0ePorOzU6zGFMZC8H2/KWBPvtdBECBIGWAUCJdQkIF2D9d1xWTWVBVsy1aU
      XtkCdfmy9/YEABp9fDs7od1wHbRlSxGMjCB1+unQ2tvgrV4DtzEBWD4PdYbUJBlrgVw3EgD4
      ZIMrcF0EBw/FBwWlvx+ps8581w3hIAiaAtsIVCiKQBG6ACIWRwK3LODOX8LauhXaypVgn/g4
      wuwEu0apkoZhwJFXWc6hciC1YyfCwUGk1q1DamCB8OzLedmyWkQgPr63tzfxt5H6Sv2KkyCf
      k7LCuru7Ua/XoWlaU1VAxhj4nj2wf/yT6Dbs2PHeVoEIjDFoug6jrxfmsqUwG7oqX7wI3q7d
      Ucw/52CFAvRlS1vy4OQUqVarGBsbQ911ke7sRLBvH5hpwrzpY8isWtVk3AZBAHfXrqYGz+lb
      b0Hu0zcjO2/eu67+hGGIPVs34677H4WltME5/BruffgJ+EYXaodewb0P/BZllseyBT1CxXF9
      H97Lr0SrpmlCWzgA97ePA66LcGgIRqEAf9HCKGTY92HbNvINW0fr70ewexcQBDAuuRjwPNg/
      +CGCHTsRbN2K1FlnImyElKiVCrBvP1TTBE8Zk/w9ciosMHmSBEEgJt9MEqUsyxITvVQqiQlI
      fg9FUcB3747Ksjfwnt8BZMirAGMMTDdEKh0a1Flt5Qr4O3ZC7e9D5owzYEodYTzPw9jYmHDd
      d3Z2Qj33HGQ3rAcAhIaBer0eNYGmbiSuGxmXMjiH2dX1nvEG79x/FJdeeQVefHkL6kqISy6/
      HC++shXzTIYLLr4Qbx+e6Nquqiryp58O5et/Dm/PHmgrVsLfubPpfLxRf0c2KkmV8HJZdP3V
      X4I1Imzr//od4ZvhtRrCAwehnHYqlKGjqP3Dt8DLZbD2dmS+9scIpXyPWq0mKgz6vp9YM7Zc
      LiOfz4uxWJYF3/fR3t4u1CXP8wRzSOV5hoaG0NvbKxgjzXYQbN0KpFLQVq6E0t+HcHgELJ9/
      f02AOJjCwExzwj8Qhqj97Tcjb67CEN56K3DlFcLYkjOggAk61CZjz/PEqkTpdYqiQFuzGu7m
      pyPVwTShrVr5nhF+ALjw/LOx+YVtGBmr4CM3XoRnX3kTo+UKVnT2YudbO6Dl5zfl2BqpFNR1
      6xCuXQtreBjWE0+Kz1hXJ7TzzgUPQ2SzWeQNAzgyiKBahVsoRHH86TT44BCgaQjLE4wSy+XA
      Fi8CB+Bv3Sr4dz4+juDV16BcdqnoGKNpGhzHmRTQSKs+NcegYrxkPOdyORExSimPlFcuV6Eg
      dskAYH/nOwh2RJPcuPACZL/+nxAeOgR0d7+/J0Aqm0X61ltQ/8UvAQDaiuVwn9ocfRhyeNu3
      wzr/PAwODqKjo0PkvxJlV6/Xp62WHIYhlLVrkfnqHyDYvx/K6lXQFy58T1CfhOLIERzYvw/L
      Tr8YY0cP4eC+PVh11pVwhl/F0FARBW0yMUBqnn/4MMJjx8T7SnsHlLY2pOt1qGEI+//7ZwS7
      94CZJtJ3fAHzly+D9b/+NjKEVXWCizdNZH7/9+DnckAYQuntnaBkGYPS04OQT1QYp2C3crks
      UmGJ9clmMtCefgb+iy9BWbwI2Ruux5FGqyRVVcV3DQDe/b+B98abSJ92KtRrr0GxWm0OrKvX
      EeydoLC9V19D6nOfhd/w9byvJ4CmaWg752yYDRXGGx6Gt2VrxHMzBm31apimicHBwaYwa9nT
      TFtvK2OWcx71mVq2FHzpEpQqFaBeBzVkfi+UYexfuRFfWrlR/P2ldec1Xq3AuY1XSSNkjEGf
      Nw+sox18NGpWEbz9Nqp/+Q2Yl10KddkyWLt2A2EIXqvBffIpGI4TrZ5AU5wVgiCiYRvvqetP
      h/mJm+C/tQPaulOAU9bCdd1JHSMZY1ERg8YzSaVSSA0Owbrr7ui0hw4hVShg/rXXoFgsilxf
      RVEQvvAi3IcfAQA4hw8jPW8e1FUrm+jQ0ExH+cONLjXamjVNzrL39QSgm0bC6w0MIPyjP4S3
      ZQuU/n5kzz8PKdPEwMCAKNtIN54oP6+h9qTTaRiGISbFpJgWRCxDm24g+OnPMX50CKkLL0Tu
      kotFttG7oRa16sEbR9IEZ4whM28egj/8KtwXX4L77LPgxRJ4vQ7nkUeR/lxvtMpTuENnB1hn
      56TzAIC2ejXU9jYoFLzIOdRLLoZx2aUIggDDo6Ni9S4UCqIiBRBVoJArA8ZjscJSCSqbqEcL
      REXVwthxvFxGNpuFZVmoVCrI5/PwVQXml+6A//wLYKYJ9eyz4ErU6vt6AsSh6zraTzsV/to1
      Imafyq2QLpkxTajlMqCq0HM5OI0qFrVaTXQPbJWamclkwO5/AO7mSM2y9u0Dr9cRjo9DXbYU
      5umnwzs2CiVlIN3ff1xFvmYKVVWbtvzZQtM0tK1Zg/rixSgdOAi/OBH3pC5YgPRtn4P71NNQ
      +3qh33A9LADmrbfAe/ElqIsWQl+7BjwMYa5fj0yhgFzDyUUVm33fR7lcRi6XQ9b34fzrd1Hb
      uxfapo3QPvaxSUlIYRhCOWUt1OXLEezbB6W9HcZFF8FpULemaaJarUY+j7POgvfyKwiPHoUy
      bx7UTRvhcy6qUVOHeDebhXrVlZGPQ9odGGPvXEbYu4GRkRHBHnieBx4E6HzxJTi/fRzM0JH6
      5CcxungRfN8XQXkAWk4ATdMQfOe7TTSagKpCW74cfoNSTd96C9ouvOB9U4YlCAKUX38dte98
      F7xUhnHZZcBVV0Bv9FemWKpKpSLKmdM/ohlpsvu+j9HRURHYKHT+Bx6C85vfiGuav/cVuCtX
      NC0StAgVDAOpahVhNovxIBDOOcrr5Zyjra0NuuvCsCygowOelHRl2zbK5TI6OjoS1VRN06AM
      Dp5cO0Acuq6jXC4Lwe7RNNiPPwE4DrjjwL3/frT/1V9iZGQE1WoVQRA0qRP1eh21Wk2s5Nls
      FpmLLkKwew+4bUcVzKiacRAIOpG7Lpz774f3HirEleSIksEYQ3bNGqj//f8ADwLomQw4IHqr
      EeKla+JRuEAkXD09PeKaHR0dURiE31yGhYWBqA1LlKvjOCgUCnA8D1XTROC6ImqYrgdMVLZw
      FQXjmoZsGCIXBGCuC6uRgEVVAmu1mginsBtxQLm3dqD2gx+e3BOACvbW63VYlgXNdsAMA7wx
      IVgjZa+npwdAJCQjUn35VColdgdypLjLliL9F18Haxjatb//FmDbka4MCJc8kxo7vxfguu60
      ZQIBRL9DVeE1VI5qdepgxHjjE4JcCM0ul+E99DD8vW+LqE9t7Vooa9ci1VBVqHE1teQ1DGNK
      20ZRFJF4k0qloB07hvoPfoRwZATaKWthfPEOKI3CWIVCQews1ODDffZZIAjeH57guYISayhf
      FYYBvbcX4dAglN5emJ/+NNy02eRUsSxLsDsAmsq/A9H2Xg0CKJ2d8DIZpNevh9rbi9S110Bb
      tRLh0BCU/nkwP/1paB3t7wmWCGiEFY8ewn133wMvOw99HVn4dgUP3XsXBh0TvWkX9951Fw5W
      GJYM9EFBiF3bnsYDv30Z85Yux7Gdz+Ph597CkiWL/v/2zjQ6ivtc87+q6qpe1d3aJZCExI7Y
      DciA8QYG28SxncSx7/XNzTY3586d5N5kMtudLzMf5+TOvTlnztwz60kyM0kmYzu2Y8crtsE2
      YMBg9kUsEgjQgpaWeu/q6qqaD93/oiUkQF7AqPWcow/qbrW6q/5v1f993+d9Hg5s/yNHLiaY
      Pased2E7JGDbeTn71MgImVgM07ZJvf0OmVf+gB3JN+T8P/xnZNetJQf4hkdQT7XjD5Zh+nzO
      JOBkoGkavL0t72pjmlh9V1Bnz0aqqUbp7UX/1f9G+mgPvrpapOrqfB+itw+zq2vq5gBivlgQ
      sUSDSygbiwqQaMyMjIw4MwXilin4L8UlVFmWnauiSECFU4mgdIv3FnJ9YwOg2DPtVkHX07z9
      4gvMv+9hKt0KmqbSfXQ7lwJ3IZ35kLp1G6nWXOx751UWb3maGpfOhb4IISnOicsRIgMGbfM8
      dA700WcvY5V2mpHme1nXUjnqDmCaJrGTJ0n+4lfYIyOo96zHHolifPKJ8xp15UrUrz2BFIuT
      /M//CLoObjfev/4RRtHAjECxI9BYCF6X9vY7ZN97z3nc95MfoyyYT+o//MxhvkrhML5/+7dE
      zRxht5vsm29NzS2QbdukEwlSr71O7vARlPnz0R7eTLIwcDO2+SX0TIPBIEInE3CSvWK43e4b
      6t5LkuQEzXiOJ4LffkthWwwM9XPxpf9LcNYynnhgNZXNi9n72quMDPQSaHuYc6+/TMRdS5lm
      g6wRVjIcOT/C6kU1fCzL1NZYHI/78XXtZnf/RSrL2qBl9L/JZrOkX3sDq68v//sHH+Le/FB+
      MKUwaGMcOoSVTOKaOye/+AF0HevMGZTGhlHS9m6XC86ew85kkFsXoXO1LK0oCmphttm1aSNW
      X57mrba1Ic2Znc9BirZwdiYDZn4NGC4X3k/rEXY7cD0FiLEwTZP0ocPor7ya/72rC095mOSC
      +ei6TlVV1aiFrarqqCmm624JUwP8+qU3ScXj3LXla0RPfURUruWxxx7ALUH/mX38/v3jLFyx
      gY1t8zn84SvYTQ9Qo59j28dn2fjIYyxo/PQK2J8aksLc2S2k3CF6B2JEhofwud3MXdDKCctP
      RaaHZPM89Mvn6B8YJqCabNu+h3mLFhEz/cQu7GR7v0r14lWoygISusTyWdfuHCRJQiqaukKS
      UFesQF2xnMTf/9zpHJtdXbg3bcznBLkcuFwozc0YRVd5VVXJvfpHsu/mr+yu1la0H/wTdNvO
      z3yfPUf6ueexs1k8T3wV349+SLZwV7clCTOXw731UTIv/wE7l8N9/31YgQB2LOZ4291ROcCk
      AuDYMXLHjzuPKTNnYs2dg9/vd0bsiofuBf/kRlB9IVasXIlq6ZQHTYb0JtbWD3MiXU9jWOXS
      qXaWb32KZbOqSF45z9Hz58nJdfReushXt6zmwPEe5s66NT2CYpimSbiyklQszpKlrRw+eJzG
      WY0kRqIsXtNGhd9DPBZjxtxlGJdPkgk1UB9UMXI2ZeE6FrbUgL+Ghc0NJGMRGhauYGZ5AE1T
      ryEpmlWV5Do6wMjh3vggnrV3Y/p80HfFmSVQ16xGfuB+tFlNSKEQ7i2bsebNxSwKAE3T0H/z
      23yRAbBGRnCvX0dOVXG73WT+63/Lm+LpOuaFC6jr1oKmkUwmSSQS+SbprCbca1aj3bMeli3F
      LMw7VFRU5HO9W3YGPiMms1hkWca1cgXyzp1YvX3IFRUoa9agqqpjw5RIJJxpJE3TrlsiHAsj
      GWHYDLC0aQndZ/7Itr2dVK29C/CiBVTe/M0vCM2cgzfZR1WNn67Bfqq9Qdz+MhS9j1RBnk9c
      eIq/2xcVFJIkoXnLWLxsOWCzcdN9yJJE6/IVzmuWLi9YCjXU5D9H7cqidwjSmi+WMbd1+YSf
      V5ZlgvPno/37f4dlmmgeD5rbnZ9Z+NazuFbdhSRLZFtaGIhEqFiwgGxLC5bLhT1ma2pZFq7Z
      LRgHD+Xfu7YWu0CLlpIprAJ9I/9iG1mSCBSUI3RdJ5lMOgJdsixjF+YUZsyY4fgO3zEBMBnI
      skzO68X747+BgQGoqCDrdqMUKRgILXlBu51Mvb6r/QRNC9uwbQsLBV2uYfVsDxe6+9FNmaqK
      crKmRWPzLPq624llaqkt6+b55zuoX3wP2DYjIyOj3NIFt8jvH1/m5bPiRmXFzwpBa3YgSUgu
      F0Yu55RUZbcbecXy/Pe1LGoLpeJiYYKxYmny099ErqvDTqdRN2wgqyjIgHX6zKjBHqW5GbPQ
      JRaGisFgMF+1K4itCQGGUazRqVAFGq/GLWZRrwfbtrly5Qr9/f00NzffVPnN6/VimSYuTQPb
      JhEbQVJ95GKXuZzwsnBWBbF4mkAwhOaSsa0chiXjIkc0kc7zYHLGhB5mwlfhy1I+vVkkk0ky
      qQRpw6bMn6dmWDmd/sEILs1PRXmA6NAgsqeMUCD/fCIawZA8hMs8xIaHsFU/4TIfWAYjcZ1w
      KEAymbzKXC0UMSRJwh2JkPzZf3RyCs+TT6Bsfgi6ezDb21Gam7FbmjELk3G6rhMOh6mqqhp1
      gbmjcoCJkMvlGOk7z4cffUzK8lBTUQbYdJ44RG9SoqaiDMlMcvJsD+UBiY/37iNmuqkOBzAM
      g8pJDLc4k0UFvRpVc+NSZDRfmKqwPy8u63YjIQRgJWSJwuNa/q4xgdYNXB1lFAPld4oOqWFk
      OLRnJ4c6ulk4pxmAgaN7eO3wGSTLjTJ8lnc+OYusBZhRHcZKXua5F3fQfvoM1WF478NjdJ05
      Te2CVnoPv8+vtx9hw11LHCn3sSVQKRhEbWhAkkBta8N1/30wMEjyH35O7thxjP0HUJuasAsL
      XlVVR36nGFNmC3T59FECM5dQV5kfg0sPnePYxRRybBczZj3FxT272XkpSVPNPVTPaOTUsT3U
      1z056XLkWM2cG6GYKlA8iHM9WJbliNeGQqGbshu9/VBYefcGkgcOOo8MRWOkhiJ4lpZx4uQR
      XLqBUdjmJy51sfiRr1Hfc5CelE400offHuLwqS5kvZJFDdc/zoZhoCxaiLRoIUgShm0jnzvn
      JMzkcuTa21FaF+VlVBRlXA+E26/n8TkhmUhyeO/7nO8r8NpH+mhcsZ4NrWFOnO0i6WumqcJL
      WUUFnYd2kpIr8bu/+K8/NsGd7NV8vIH3OwUNK9bzl9/7M3qP7cXlDfPA409x6Uw+QNwBN0N9
      QwzG0lTPXMBf/OD7LJ4zl9jlTzh2aB/bd+zmUiR53fcXlGrhAaY0N18VwlIUlLlzR6nUjWcJ
      NWXuALWL1vL9B8K89Mf3WbOoCSlQwWBnB6mBOFLtWY4cvsDpzgu0zGnl3q8+y67tbxBNZPF9
      gRT+z2Pr8mUavbw+dN596fec7BsEfyWp3kusbp3JH1/dS0PrWtbMDfLGay9SPXc1x/fuoKL1
      btyHXue8r4mHNZs3X/wdasMynrxnORJw9MRxGiv8N+Qiqarq0J7Nulp8P/wrzJOnUFqasRct
      GpULptPpa7ZAUyIJ1nWd7nOHeHPHYe7f+hhnDuyi7YGHOLP3HVLhhdy7PC+yeuHiRap88Prb
      71O74G7uXTWfdPL6V5nPgs/D99jv94/v3vglgxhcByA7TH8qQE14nMqabdM/MEhNTfVNve/w
      8PCEFTpBcBN0iLKysqvTYgXZm+K7rsfjuZbNOlUCwKkC2SbxlE6Z/8b7Ztu2GS7YqBYXAgQt
      99MOmgjuvCjHiYRW0IMnEqId733C4fAXWr78vCC+380im80Si8Wu+zciAZ7o+0ejUWeeWJyz
      aDRKIBBw5oaLA0CYNkqS5EwCTokt0Ngad7BI+My2bQYHB0ctPFFWEz7GHo/HeS6TyWCaZt6W
      J5O5KT2asUluJBIhnU7TXFGB/v+ew+y6iNa2htzmh4gnk6P8uCaCaNh9WeYJboTJbtVkWSYa
      jY46J0IES9BSFEUhk8mgqqqTyF7v/bxeb14JQtMcOfViCk02m6W/v5/ycJjYu++hTxUy3I0W
      k7fgQ5xMJinTNOztOzB7+yhvW0N27hxGRkYYGRnB6/Xi9Xrx+XwYxsS1+vEwtoETCoXIbd/h
      TI/p297Bv3gx8dD4LuhjEQwGbz1h7hZClCZ1XUdzueCTg+ROnECZNw9l7d1kC9uXXC5HNBol
      lUpRVlbmzGbAteddkiTHmUawgYuNVoQgb/pyN5mXXsZOpaZGAFwPkiQ5Rsk+nw/e247++hsA
      GMeP4/1X/wKP1+vMAIg7iaIojral2MbcLAKBQP4kjGnO2Zk0ZQ0zbxiw7sIY4lSGoKjLsox0
      roPUb34LloVx8BBerxdl+TIsy6K8vDxf4VEUh6pe/B6JRAKfz5c3OYzF0J97nkwsju/hLait
      i5ByOdRT7di6TmD5MnKahp1IYovu9O06ALcSLpfLEVAyC7r4AOg60lDEGXgpZoS6XC5CoZBz
      JREaQmNr+WKPWbyoxRZLve8+5BkzQFVxLVmCtGDhDQNJ0LLvhObXp4U4po7Wf1/fVYkV28bq
      6XGErWKxmPNaVVUJBoMEg0ECgYAz8CSe0194kdypdqzubvTnnseXySC/8SbpX/ySzG9+i/7L
      X6ECnsYGtPvuzSvF3dYjcQsh3AjV1avzk0O5HHJNDXJLiyODMnZxynK+q6tpmkO3ENJ8Yxf9
      2N9t2yZXU433pz9BymSwAwEMbpwkFk+fTVVkC9KLYpErrYuQysryek4+H67ly/JOouCowY2F
      LMuEQqGrdxFJGu17kM1iZ7MYh68qe+fOdSClUmhVVYT+9E/QN24snQAQ01uZlSvw19ZiDw4g
      z5tHTtOQCrdjUfVRFAVXOo2USmGFw2QLAy5ut9vp0Apf4RvC44FCGfNmDvadU/f/9CjOrWzb
      xigvx/e3/wb7wgWkxgZyoZCzRYGrDjXFkCTJqbZlMhmy2SxljzxM5ne/w87oaOvWYldV4Zo/
      z7FQUhpmYheG/L1+P97ZLVOjDHqzsG3bockWb2fsAjtTqAlrvX1kfvkrrGgU14L5uH/wF2QK
      V6SRkRFHakM2k7z15ru0rHqQJc35unZPxwnSnnrqtSgvvrULSVHZ9Ng3qA+6GOg6yY4D59ny
      lUcJexQ6ju7D33wXRvchDnQk2LLlfiqD/im//4/FYqP28gLijlCMkZERwuHwuJquwnQjmUxS
      U1OTz+PicWxdx6qoIJpIUK6qmHv3YWd0XOvuRq6uvmrLRInkAAJSQS6jvLwcv99/1Z6zQMk1
      DANVVTHe/wBraCjPJzl5CvvsWWd75PV6SSQSJBIJ+nuHWL/5Yc6fPFD4D0kGepMMRQfxVjbx
      9NNPM7s6hMfrwrbho4PtbHlgMbt3HiY91MXBT/Zxtq+Xj08lWDcvwCenL92mI3PrIBbxeH2D
      cc3wCgu/WOJckNoCgQA1NTW0tLQ4ptxyZSXKjBmoHk9+8i8Uwv3Iw3iefBylpsYRSxP5XkkF
      gICQ1ChuMol6M4BUVrTnlCQkv985OW632wme+uZmLrYfY94iMTjiZ9HiWUhISLKCkh0kE2ik
      XM1fbaq88NIftlFZX8XhE12sXbMUlCBBu4dXPjhOdfnNlUjvZGQyGfr7+0kmk+P+jOU+eb1e
      hoaGiMfjTsILFhfbDzGYshnoOsWrr7zCK9s+IG3khbiunD/Btu0fkTIsejuP8ca7O0nqOkf3
      vc+2D/ZjFMVZyeQA40FRFILBIJcuXXKaLblcDm3LZuxYDLO7G23dOqyGBuwxRCpN0zi9932y
      FXOYEfSQ1dNIisJAfz9Dg3FSegsdJztpbW3DNg3ShsVgymDzQw+wb/8R7EwfB3Z3Ys6MUB9u
      YPNahdPdA6ycO+M2HY1bA4/HQzgcdhQ5xkLXdYaHh51KkSh/Cnn0ZDJJbYWPzGAnl3zLuLuu
      mQ0bKvl430FsSQZzmI8O9bBqQZADJ89SicTSOpN97f3MmzEbT+8x9p2J8siq/EWupAMA8kFQ
      V1fHwMAAuq7j8/nIut2o3/0OWqERI1iEQlnMNM18u72yivOd7SSjM/Cn+5m9qo3TnZexbJvB
      eIa6WQupDLkZ6jxKh17OhrZVHGzvZtPWRyn3qRiJQWJSGL33JCe7U9y7ds5tPhpfPCRJcqyR
      BEQXWFTihHGGuNuK+QlFUfINy2ANC2Y3MGCC6vGhRbsJNyzAr0pgBwjLA7z10WU2PPI4LUGD
      g4ejrGirY+Dk++w6HmHrM1e5VSWVBE8E0zQZHBx0bHWK96LiKiUS52JqRDGxStezuN3jc1Zy
      uSySrBVb1I4LkaNM9STYtm2i0ajj42Xv2YuxcxdyTQ3aN79B1u12LjR+v3/URJhhGJQFfKQ6
      drLHWs2D8wN88sEOFm3YSJlikkv188qOs9y7qIz9VyQ8sSssv3sdfq/N8FAWM36KM7E5PLlp
      Yb7ad7sPxpcBYvJqLO+mOBAMwyAUCjnVA9M0iUQio7Qzi/ev1/QFchmy1yF+aZp2jVvKVIWY
      zTUMA7mvj+QLvwfDwLx0CcnrwfXM087rtGyW3K7d2JkM2vr1yBXlpKN9vHtoAF37gMjMTTTO
      X0xQlbh4aCeR6jWsnednz5lhHnywjf1vdrD9nbdobdtAovMIg2aQLZsanM9S8gFgWRZ6PI50
      9BhlwTJobh6lHw845DhRidCMHNbpM0jV1dhlZZPiDE0E/5dMS/SLhiAw5pLJURanVjSGq4i9
      mX3+BaeOnzt9Gs+P/wZPRSNPPvPM1TcryzN/qxbcTaPPh8RqGhbmn3ro609dfV3LzFGfwbbt
      0g4A27ZJRYaJ/cPPHSd4zze+TnbNaudqLrxvxd1BMwzSf/f3eVshWcbznW+TmT/PaaKJkl2x
      ivF49W24Wn71er1TftszHvx+P/HZc3AtWUzu5Ckkvw9t00aHelJTU0P6XIfzerO3DymdJlVo
      jAndV6/XSzabzW9Ji3zgqqqqrntc73iLpM8D2Z7uUa7pxv79BDdtdJShxR5UGGi4u3vyPQIA
      yyJ38BDSgvnAaH5QMcbTugwEAo6HbbFlUClBluW8T8P3v4d7YAB8PsyyMqyCjIlt26h3rSS7
      fQeQ94Cz/P680G88js/no76+HsjnaMVUlpslL5Z8ALjKy5HCYezColZmzRrVeBHw+/35alB1
      VZ7eULhDKE2NaJpGNBpF07RrPG+LF7+qqg5T9E6TPfkiIO6UOUnCEla0Y5zi1ce/imvBfOx0
      BnnpErLkF/tYwqDb7c4Pyo/xH7vh/y/1KpBhGMRPnET/8EPkUAhM1OTGAAAKuklEQVTtoU3k
      Cl5h49WpXS4XyrmOvEVQfS3yvfdiFCoUuVzOGcoQEEHg9XoJhUIlwfWZDOLxOKlUatSxjsfj
      TrlUQEzYjYyMOMxeKBj9mSZcvowdDGJVVjoEOl+RR/REmPIBIBQDrgfDMEa15ot1aMb7W3Ey
      UqnUKBXoVCpFZeVVS1Kx93e5XNcIMk0jj0wmQzweH1VIEGbloVDI4fzDVeFikW9JkoRqWWT+
      8b9gXriA5Hbj/d53Ca69+6bHSKf8FkjMld4IxYnrjRaqZVkMDw87B1mMW4pmjlj4xfSJUt/u
      TITreSUI+rnY7owVCZNlGbujM1/AsG3sdJrs7t2Ya1bf9P+f8gFgWzl++z//Exm5hsef/VOq
      vTLnj+9n/6levvK1x+jY+x6fnO2iYdE6Nq9dTLSnnZff3oOlVfPkw8vZ987rzNz0T2nQT7Fj
      9wHWbP1zGgI4LojiJLndbqfiMxbTV/6JUWyyV3zRELnUWBdJYFQwSOEQqKrjPSBP8k5bAgFg
      oGgh1m+4n0pPfnG2LFlDIrULy5ZYes9DNM67zMmLeXWIUN0c1rdlON0xgL+qkU3rlnA4BxWN
      i1i/fIhUIUcTlFrbtp1psaqqKuexYvnDO0Xe8HZAqGQPDQ05wsBCCWKifEkB7CNHMTo7cbW2
      4v3Wn2Hs2YNcW4f/iScmpaIx5QNAUlRW3rWCgZMfcND9dVY3FEudSAx2neDssEzbqmVXH5UV
      PKpFJgfjCaMUV4hEsixmCcZWf9SClv00Jobog4gpMUFZDoVCaJrm6PvYtk0qlSLQ2Un6l/8L
      TJPshzvx//Sf4/7RDx33nslcbKZ8ANj6CEePnGAkleORtUmOnO5FjXTw5o69NAxZ+PpOMGBp
      xNIG9X6TcrfJR3uPYbvKifee5uWXd9AT6MN/10y279iBURfjh888DOBIbwttGhjNXxfqEFN9
      xPGzQpZlamtriUQiTtEgGo06F5FQKORo/qiqirfj/NVyqWFgXrhAYMF8R/N/MpjyVaB4PO4k
      wfGhy4zkQjTWjqO0ZqZo7+hnwbxmbnQMxWTZlStX0DTNGcYYW/d3u92Ew+HpHOAmYFkWkUjE
      qeUPDAzkBQK6LpL7eD9yfR3Sgw8Sy+qE+66Q+u//Iy+N7vVS9q//JcH58z9ViXnKB8CNyqDJ
      ZJJsNutQHYrH7opNG4oXt23b5HI5kskkYY8HyzCwPR5sSXKCTVVVR+d/GjeHVCo1iiatRYZJ
      /uzvnATXvfVR5EcfAdtGvnwZ80IXrgUL8M+d86m3mVP+7FzvwNi2TTweJ51Oc/nyZRobG51B
      jQCgb9+BnUii3X8fZn0d8XjcYY3atk2wr4/0b3+HnU6jbXwQa+ODeRPoIpOLadw8hCJGLpdj
      ZGSEqsFBxwADwOrtxSpQoj0NDchNTfgKlJJPi5K+N4urupA86e7udszVsr9/Ef3tbWR37yb1
      i18ip1LEYjEikQjxeDz/d6+9jhWJYKfT6O9tR43lg2l68X86CM82wb0ymxqR6+tBkkDTcLWt
      YWhoyMkV/H7/Z+6xlPRZEgHgdruZN28e6XTaqUebXVcJctbQEFI67XR5TdPMW6sWLXJJlpFd
      eRW5O0XP88sIVVXJZDLU1dVhShLen/4Eu/M8UmUFRmUl3mQSj8dDKBT6XBqMJR0AQhnAMAyH
      XyJG71iz2pFQVObMgXAYTyHJEkpk9te/Tur//Bo7Hsf9la3IlZXU3wFS5l8WCMW3Ygh6eDGk
      ZUvzzxUuVoqiOOrOY6EoyqQcdaZ8EjwRhOxeJpMhGo1eo8GvulxI589jJ5MoixdjjqnkiGFt
      oU8vyzKapk249ZkmwV2L6PAQF853kDYU5syfiyZDPNJHV88g1TNaqPDZDMWz1FVXAJDTE3R0
      XkDxVTJ7RpBTZy7gCVTQ3FBF94XzaOF6ZtaEx1WSmwglmwMIteCxpUsBI5fDbG5GXr4c2e1G
      VdVRP7IsO0oFcNXcTmgGFf/cyTZHXySM+CB7Dh4lkUxh2QA2J/buoi+WQDeynG0/xd7CNBjA
      lXOnaL/QQyqjEz/3MZ9cjJJK63Qe+JBDF64QS6Qm/RlKcgskOorF0hvjQdAZes8e5r09J7h7
      81bcI+f48JNO7tn8CC21IWwzw57t2xiwalg6E97fdwJdC/HM1jW89sLbeFsW8ydb77vF3/DO
      QDarE+m+QE9oJnnrbYuRyDDdg1nmzF1C64o1RNK7nNcn9TiXz3VRVT+b4bROpOc80fpqui72
      ks5a9FfNYNEkP0NJ3gHE1VoYp020BczfHUyOnrrI4994jNOH93G8vY+vbl3PmdNnAeg5cwy7
      bhlf2biK5iVr+e63n2FR0wyM4R4WP/ItvvnwPbfyq91RUP0hnv3+XzNHuUT7UA5siZVbnuDb
      T21m/66Prnl9zawlfP8vv8PI6YPQchd/9efPMtR5BH+gkgcef4qejmOT/gwleQcQ2vRw4725
      bUNducoLz7/E7MVtlCU6eOEP21i46kEAYsko7YeO037Iw+Pf+Ca5njNUNM1HlS6z/53fcayi
      ie8//cgX/p3uRMiyzL73XsEINrM2fpKPIuXUZi/x9tGLbHz0UXa99iLHLvWTdgUxhvrZcNdc
      Xn3hLZqW30eVmuHl595m1op7WDGrjLfffJnmpZO/05ZkEmxZFv39/ZimSSKRIBAITEhXcCkS
      77/1Olp5NQPRGH7DwBf2M2yXs35xE6oZZ8+RDnJGitX3PcrZAx+x/qFNRDpPcLp7kIu9Mb71
      7JOEJ5GYlQqKu76J2DCaN4SmjnMeckkiKRcVwRt3exVFmVQSXJIBIHzD0uk0yWRylN7PWLhc
      LmwjzeW+IWobmlCyMXoGYtTPrGTv7mM88OBaIn3d6EqAGTUhUokM/oAP00hz6VIPwaoZVJcH
      JnVSSgVm0fzv54Wxs9w3fH0pBoBpmo7gqizL1zXCUxQFVVUdLfpPA6FoPI0vH0o2BxAye8VU
      5vEgXAsrKyvvCLvSaUwOJRkAYgD7eixRweUXM6vT3J6piZI8q4ZhOMJXE0E0yIRL5DSmJkqy
      DwDc1MJOp9OkUpPvLk7jzkHJBgBwQ7kU4SQzjamLkgsA27YdTU4xcD0ehHvMNIltaqPkAsCy
      LLLZrDP5FS/yli3GZN3hp3FnouSyO8H/MU3TUXIbC4/HQyAQmNbyKQGUVACI8cdsYcjaNM1r
      GlRCxHZ68ZcGSuoeL7g/xRi7x59e+KWFkgoAYUwh9vZCcawYovT5RfBUpvHlQ0kFAFzt/gqH
      wvHcXGKxGLqu346PN41bjJLKAXK5nNPYuh65zeVyXZcgN42pg5K6AxSrNmcymXHlSzRNo7y8
      fLoEWiIoqbNc7PHrcrnGbXJ5vd7p5lcJoaQCQEDX9XH5+WLrM10JKh2UVADIsuwIK0UiEacf
      APmcYHrrU3ooqSRYlmVH0EpVVdLptCNrLp67EcZ2jqfvFnc2SioAhOS5LMvkcjmy2SyapjlX
      fWFsMRFM03Tk1nO5HGVlZdMBcIejpAIArpY/RVNMSKQkk0lH1nwiCGl0YDpXmCIoqQCQJMkR
      T81ms87dwOVyjdIKut7fTys/Ty2UXMYnXAiLPYGF4YXQCp1G6aDkAkCSJDwej2OoJvb/kiSR
      zWang6DE4CouBZYShIujkEeBfB8gFothGMZtH4QX8wrT+GLx/wFCyu5oRoyuAQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Mortality rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Death Cases' width='192'>
      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
      Wo5yKv4f5oRUgqASPGgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Recoveries' width='192'>
      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
      /j+nvUi47XmcFwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
